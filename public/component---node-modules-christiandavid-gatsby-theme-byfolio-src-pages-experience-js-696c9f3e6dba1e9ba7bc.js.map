{"version":3,"sources":["webpack:///./node_modules/@christiandavid/gatsby-theme-byfolio/src/utils/isSSR.js","webpack:///./node_modules/@christiandavid/gatsby-theme-byfolio/src/components/experience/experience.css.js","webpack:///./node_modules/@christiandavid/gatsby-theme-byfolio/src/components/experience/index.js","webpack:///./node_modules/@christiandavid/gatsby-theme-byfolio/src/pages/experience.js","webpack:///./node_modules/use-debounce/esm/useDebouncedCallback.js","webpack:///./node_modules/@christiandavid/gatsby-theme-byfolio/src/components/hooks/useMQResize.js","webpack:///./node_modules/@christiandavid/gatsby-theme-byfolio/src/components/hooks/useWnResize.js","webpack:///./node_modules/@christiandavid/gatsby-theme-byfolio/src/components/hooks/usePrevious.js"],"names":["isSSR","window","mediaQueryGenerator","type","size","media52Dot5em","media36em","styles","experience","header","css","grid","job","link","img","year","position","company","mediaQueries","min52","max36","Experience","currentYear","jobs","title","description","showLoadingAnimation","transitionStatus","useState","loaded","setLoaded","gridRef","useRef","matchPoints","useMQResize","jobItems","map","createRef","itemsHeight","maxMarginTop","minMarginTop","current","item","getComputedStyle","marginTop","parseFloat","offsetHeight","length","style","height","Math","ceil","wait","cb","data-test","ref","index","node","id","slug","fields","frontmatter","logo","jobTitle","dateFrom","dateTo","years","showYear","key","cover","to","direction","bg","fluid","childImageSharp","alt","substring","query","data","bgClassName","Helmet","allMarkdownRemark","edges","useDebouncedCallback","callback","delay","options","maxWait","maxWaitHandler","maxWaitArgs","leading","trailing","undefined","leadingCall","functionTimeoutHandler","isComponentUnmounted","debouncedFunction","cancelDebouncedCallback","clearTimeout","debouncedCallback","args","_i","arguments","apply","setTimeout","shouldCallFunction","callPending","queries","queryMatch","setQueryMatch","keys","Object","handleQuery","useCallback","updatedMatches","reduce","acum","media","matchMedia","matches","resizeHandler","useEffect","addEventListener","removeEventListener","useWnResize","windowSize","setWindowSize","getSize","width","innerWidth","offsetWidth","innerHeight","usePrevious","value"],"mappings":"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","file":"component---node-modules-christiandavid-gatsby-theme-byfolio-src-pages-experience-js-696c9f3e6dba1e9ba7bc.js","sourcesContent":["const isSSR = typeof window === \"undefined\"\n\nexport default isSSR\n","import { css } from \"@emotion/core\"\nimport mediaQueryGenerator from \"../../utils/mediaQGen\"\n\nconst [media52Dot5em, media36em] = mediaQueryGenerator([\n  { type: \"min\", size: \"52.5\" },\n  { type: \"max\", size: \"36\" },\n])\n\nconst styles = {\n  experience: css`\n    color: #fff;\n    h1,\n    h2,\n    h3 {\n      color: #fff;\n    }\n  `,\n  header: css`\n    position: relative;\n    margin: 0 auto;\n    max-width: 1200px;\n    padding: 0.3rem 6em 0;\n    h1 {\n      font-size: 3rem;\n      line-height: 1.25;\n      margin: 0;\n      ${media36em} {\n        font-size: 2.2rem;\n        line-height: 0.8;\n      }\n    }\n    p {\n      display: block;\n      max-width: calc(100vw - 5em);\n      margin: 1em 0 0 5px;\n      font-weight: 500;\n    }\n  `,\n  grid: css`\n    max-width: 1200px;\n    width: 100%;\n    margin: 0 auto;\n    display: flex;\n    flex-flow: column wrap;\n    align-content: space-between;\n    min-height: 100vh;\n    &::before,\n    &::after {\n      content: \"\";\n      flex-basis: 100%;\n      width: 0;\n      order: 2;\n    }\n    ${media36em} {\n      &::before,\n      &::after {\n        flex-basis: auto;\n      }\n    }\n  `,\n  job: css`\n    width: 50%;\n    min-width: 280px;\n    margin: 0 0 2em;\n    padding: 1em 4em 0;\n    position: relative;\n    &:nth-of-type(2n + 1) {\n      order: 1;\n    }\n    &:nth-of-type(2n) {\n      order: 2;\n    }\n    &::before {\n      font-family: sans-serif;\n      font-size: 10em;\n      position: absolute;\n      top: -1em;\n      left: -0.15em;\n      opacity: 0.3;\n      content: attr(data-year);\n    }\n    ${media52Dot5em} {\n      width: 33.33%;\n      margin: 0 0 9em;\n      &:first-of-type {\n        margin-top: 5em;\n      }\n      &:nth-of-type(2) {\n        margin-top: 14em;\n      }\n      &:nth-of-type(3n + 1) {\n        order: 1;\n      }\n      &:nth-of-type(3n + 2) {\n        order: 2;\n      }\n      &:nth-of-type(3n) {\n        order: 3;\n      }\n    }\n    ${media36em} {\n      width: 100%;\n      margin: 2em 0;\n      padding: 1em 2em 0;\n      &:nth-of-type(3n + 1) {\n        order: 0;\n      }\n      &:nth-of-type(3n + 2) {\n        order: 0;\n      }\n      &:nth-of-type(3n) {\n        order: 0;\n      }\n    }\n  `,\n  link: css`\n    display: block;\n    color: #474283;\n    &:hover {\n      color: #474283;\n      outline: none;\n    }\n  `,\n  img: css`\n    max-width: 100%;\n    box-shadow: 0 0 10px 1px rgba(0, 0, 0, 0.4);\n    transform: translate3d(0, 0, 0);\n    border-radius: 50%;\n    position: relative;\n    z-index: 1;\n  `,\n  year: css`\n    font-size: 0.85em;\n    position: absolute;\n    z-index: 1;\n    right: 0;\n    margin: -1.4em 3em 0 0;\n    padding: 0.3em 0.5em;\n    color: #fff;\n    border: 2px solid #fff;\n  `,\n  position: css`\n    font-size: 1em;\n    font-weight: 900;\n    margin: 0 0 0 1em;\n    white-space: nowrap;\n  `,\n  company: css`\n    font-size: 0.9em;\n    font-weight: 600;\n    margin: 1em 0 0.5em;\n  `,\n}\n\nexport default styles\n","import React, { useState, useRef, createRef } from \"react\"\nimport PropTypes from \"prop-types\"\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\nimport Img from \"gatsby-image\"\nimport { useMQResize } from \"../hooks\"\nimport Delay from \"../delay\"\nimport isSSR from \"../../utils/isSSR\"\nimport styles from \"./experience.css\"\n\nconst mediaQueries = {\n  min52: \"(min-width: 52.5em)\",\n  max36: \"(max-width: 36em)\",\n}\nconst textLimit = 15\n\nconst Experience = ({\n  jobs,\n  title,\n  description,\n  showLoadingAnimation = true,\n  transitionStatus = \"entered\",\n}) => {\n  const [loaded, setLoaded] = useState(false)\n  const gridRef = useRef(null)\n  const matchPoints = useMQResize(mediaQueries)\n  const jobItems = useRef(jobs.map(createRef))\n\n  if (loaded && !isSSR) {\n    // It's mandatory to specify the height when using flex column\n    const defaultMinMargin = 9999\n    let itemsHeight = 0\n    let maxMarginTop = 0\n    let minMarginTop = defaultMinMargin\n\n    for (let item of jobItems.current) {\n      // Get margin top and Bottom size to add it to the height later\n      const styles = window.getComputedStyle(item.current)\n      const marginTop = parseFloat(styles[\"marginTop\"], 10)\n\n      if (marginTop) {\n        if (marginTop > maxMarginTop) {\n          maxMarginTop = marginTop\n        }\n        if (marginTop < minMarginTop) {\n          minMarginTop = marginTop\n        }\n      }\n\n      itemsHeight += item.current\n        ? item.current.offsetHeight + parseFloat(styles[\"marginBottom\"], 10)\n        : parseFloat(styles[\"marginBottom\"], 10)\n    }\n    minMarginTop = minMarginTop === defaultMinMargin ? 1 : minMarginTop\n    if (itemsHeight) {\n      // Media queries specified in CSS; The size change by the amount of columns,\n      // each column and media query has different margin top and bottom\n      if (!matchPoints.max36 && !matchPoints.min52) {\n        itemsHeight += jobs.length * minMarginTop\n        itemsHeight /= 2\n      } else if (matchPoints.min52) {\n        itemsHeight += jobs.length * minMarginTop\n        itemsHeight /= 3\n        itemsHeight += maxMarginTop\n      } else {\n        itemsHeight += jobs.length * minMarginTop + maxMarginTop\n      }\n      gridRef.current.style.height = `${Math.ceil(itemsHeight)}px`\n    }\n  }\n\n  function handleLoad() {\n    setLoaded(true)\n  }\n\n  function getJobs() {\n    let currentYear\n\n    return jobs.map(\n      (\n        {\n          node: {\n            id,\n            fields: { slug },\n            frontmatter: { company, logo, jobTitle, dateFrom, dateTo: dateEnd },\n          },\n        },\n        index\n      ) => {\n        const dateTo = dateEnd || dateFrom\n        const years = dateFrom === dateTo ? dateFrom : `${dateFrom} - ${dateTo}`\n        let showYear = false\n        if (index % 2 === 0) {\n          showYear = true\n          currentYear = dateTo\n        }\n\n        return (\n          <div\n            key={id}\n            css={styles.job}\n            ref={jobItems.current[index]}\n            {...(showYear && { \"data-year\": currentYear })}\n          >\n            <AniLink\n              cover\n              to={slug}\n              css={styles.link}\n              direction=\"left\"\n              bg=\"#282b2f\"\n            >\n              <Img\n                css={styles.img}\n                fluid={logo.childImageSharp.fluid}\n                alt={company}\n              />\n              <span css={styles.year}>{years}</span>\n              <h2 css={styles.company}>\n                {company.length >= textLimit\n                  ? `${company.substring(0, textLimit)}...`\n                  : company}\n              </h2>\n              <h3 css={styles.position}>{jobTitle}</h3>\n            </AniLink>\n          </div>\n        )\n      }\n    )\n  }\n\n  return (\n    <main css={styles.experience}>\n      <header css={styles.header}>\n        <h1>{title}</h1>\n        <p>{description}</p>\n      </header>\n      {/* TODO: Find a workaround for this */}\n      {/* It appears that AniLink causes the page to render many times */}\n      {/* {transitionStatus === \"exited\" ? ( */}\n      <Delay\n        wait={1000}\n        cb={handleLoad}\n        showLoadingAnimation={showLoadingAnimation}\n      >\n        <div css={styles.grid} data-test=\"jobs\" ref={gridRef}>\n          {getJobs()}\n        </div>\n      </Delay>\n      {/* ) : (\n        <div css={styles.grid}>{getJobs()}</div>\n      )} */}\n    </main>\n  )\n}\n\nExperience.propTypes = {\n  jobs: PropTypes.arrayOf(\n    PropTypes.shape({\n      node: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        excerpt: PropTypes.string.isRequired,\n        fields: PropTypes.shape({\n          slug: PropTypes.string.isRequired,\n        }).isRequired,\n        frontmatter: PropTypes.shape({\n          company: PropTypes.string.isRequired,\n          logo: PropTypes.object.isRequired,\n          jobTitle: PropTypes.string.isRequired,\n          dateFrom: PropTypes.string.isRequired,\n          dateTo: PropTypes.string,\n        }).isRequired,\n      }).isRequired,\n    }).isRequired\n  ).isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  showLoadingAnimation: PropTypes.bool,\n  transitionStatus: PropTypes.string,\n}\n\nexport default Experience\n","import React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { graphql } from \"gatsby\"\nimport LayoutContactMe from \"../components/layout/layout-contact-me\"\nimport Experience from \"../components/experience\"\n\nexport default ({ data, transitionStatus }) => {\n  return (\n    <LayoutContactMe bgClassName=\"experience\">\n      <Helmet>\n        <title>Work Experience</title>\n      </Helmet>\n      <Experience\n        jobs={data.allMarkdownRemark.edges}\n        transitionStatus={transitionStatus}\n        title=\"Work Experience\"\n        description=\"Here you can find information about my work experience, these are some\n      companies in which I have had the privilege of working.\"\n      />\n    </LayoutContactMe>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: {\n        fields: {\n          slug: { regex: \"/experience/\" }\n          hideOnExperience: { eq: false }\n        }\n      }\n      sort: { fields: [frontmatter___dateFrom], order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            company\n            logo {\n              childImageSharp {\n                fluid(maxWidth: 481) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            jobTitle\n            dateFrom(formatString: \"YYYY\")\n            dateTo(formatString: \"YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n","import { useRef, useCallback, useEffect } from 'react';\nexport default function useDebouncedCallback(callback, delay, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var maxWait = options.maxWait;\n  var maxWaitHandler = useRef(null);\n  var maxWaitArgs = useRef([]);\n  var leading = options.leading;\n  var trailing = options.trailing === undefined ? true : options.trailing;\n  var leadingCall = useRef(false);\n  var functionTimeoutHandler = useRef(null);\n  var isComponentUnmounted = useRef(false);\n  var debouncedFunction = useRef(callback);\n  debouncedFunction.current = callback;\n  var cancelDebouncedCallback = useCallback(function () {\n    clearTimeout(functionTimeoutHandler.current);\n    clearTimeout(maxWaitHandler.current);\n    maxWaitHandler.current = null;\n    maxWaitArgs.current = [];\n    functionTimeoutHandler.current = null;\n    leadingCall.current = false;\n  }, []);\n  useEffect(function () {\n    // We have to set isComponentUnmounted to be truth, as fast-refresh runs all useEffects\n    isComponentUnmounted.current = false;\n    return function () {\n      // we use flag, as we allow to call callPending outside the hook\n      isComponentUnmounted.current = true;\n    };\n  }, []);\n  var debouncedCallback = useCallback(function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    maxWaitArgs.current = args;\n    clearTimeout(functionTimeoutHandler.current);\n\n    if (leadingCall.current) {\n      leadingCall.current = false;\n    }\n\n    if (!functionTimeoutHandler.current && leading && !leadingCall.current) {\n      debouncedFunction.current.apply(debouncedFunction, args);\n      leadingCall.current = true;\n    }\n\n    functionTimeoutHandler.current = setTimeout(function () {\n      var shouldCallFunction = true;\n\n      if (leading && leadingCall.current) {\n        shouldCallFunction = false;\n      }\n\n      cancelDebouncedCallback();\n\n      if (!isComponentUnmounted.current && trailing && shouldCallFunction) {\n        debouncedFunction.current.apply(debouncedFunction, args);\n      }\n    }, delay);\n\n    if (maxWait && !maxWaitHandler.current && trailing) {\n      maxWaitHandler.current = setTimeout(function () {\n        var args = maxWaitArgs.current;\n        cancelDebouncedCallback();\n\n        if (!isComponentUnmounted.current) {\n          debouncedFunction.current.apply(null, args);\n        }\n      }, maxWait);\n    }\n  }, [maxWait, delay, cancelDebouncedCallback, leading, trailing]);\n  var callPending = useCallback(function () {\n    // Call pending callback only if we have anything in our queue\n    if (!functionTimeoutHandler.current) {\n      return;\n    }\n\n    debouncedFunction.current.apply(null, maxWaitArgs.current);\n    cancelDebouncedCallback();\n  }, [cancelDebouncedCallback]); // At the moment, we use 3 args array so that we save backward compatibility\n\n  return [debouncedCallback, cancelDebouncedCallback, callPending];\n}","import { useEffect, useState, useRef, useCallback } from \"react\"\nimport { useDebouncedCallback } from \"use-debounce\"\nimport isSSR from \"../../utils/isSSR\"\n\n/**\n * Media Query Window Resize Hook\n * This function determines if the MediaQueryList matches\n * the size of the window, it is executed every time the screen is resized\n *\n * @param {*} queries Media Query List\n * @returns\n */\nfunction useMQResize(queries) {\n  const [queryMatch, setQueryMatch] = useState(null)\n  const keys = useRef(Object.keys(queries))\n\n  const handleQuery = useCallback(() => {\n    const updatedMatches = keys.current.reduce((acum, media) => {\n      acum[media] = !!window.matchMedia(queries[media]).matches\n      return acum\n    }, {})\n\n    // Setting state to the updated matches\n    setQueryMatch(updatedMatches)\n  }, [queries])\n\n  const [resizeHandler] = useDebouncedCallback(\n    () => {\n      handleQuery()\n    },\n    // Delay\n    500\n  )\n\n  useEffect(() => {\n    if (!isSSR && window.matchMedia) {\n      // Add listener\n      window.addEventListener(\"resize\", resizeHandler)\n      handleQuery()\n    }\n\n    return () => {\n      // Remove listener\n      !isSSR &&\n        window.matchMedia &&\n        window.removeEventListener(\"resize\", resizeHandler)\n    }\n  }, [handleQuery, queries, resizeHandler])\n\n  return queryMatch\n}\n\nexport default useMQResize\n","import { useEffect, useState, useCallback } from \"react\"\nimport { useDebouncedCallback } from \"use-debounce\"\nimport isSSR from \"../../utils/isSSR\"\n\n/**\n * Window Resize Hook\n * This function detects and returns the new window or element width and height\n *\n * @param {boolean||ref} [ref=false]\n * @param {number} [delay=500]\n * @returns {object} [{width, height}]\n */\nfunction useWnResize(ref = false, delay = 500) {\n  const [windowSize, setWindowSize] = useState(null)\n\n  const getSize = useCallback(() => {\n    // Setting state to the updated matches\n    setWindowSize({\n      width: ref === false ? window.innerWidth : ref.current.offsetWidth,\n      height: ref === false ? window.innerHeight : ref.current.offsetHeight,\n    })\n  }, [ref])\n\n  const [resizeHandler] = useDebouncedCallback(() => {\n    getSize()\n  }, delay)\n\n  useEffect(() => {\n    if (!isSSR) {\n      // Add listener\n      window.addEventListener(\"resize\", resizeHandler)\n      getSize()\n    }\n\n    return () => {\n      // Remove listener\n      !isSSR && window.removeEventListener(\"resize\", resizeHandler)\n    }\n  }, [resizeHandler, ref, getSize])\n\n  return windowSize\n}\n\nexport default useWnResize\n","import { useEffect, useRef } from \"react\"\n\n/**\n * Get the previous props or state\n *\n * @param {*} value\n * @returns {*} re\n */\nfunction usePrevious(value) {\n  const ref = useRef()\n  useEffect(() => {\n    ref.current = value\n  })\n  return ref.current\n}\n\nexport default usePrevious\n"],"sourceRoot":""}